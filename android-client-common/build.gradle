/*
 * Copyright 2014 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "androidx.core:core-ktx:$rootProject.ext.ktxVersion"
    implementation project(':api')
    implementation "com.android.support:support-compat:$supportLibraryVersion"
    implementation "com.android.support:exifinterface:$supportLibraryVersion"
    api "android.arch.lifecycle:livedata:$lifecycleVersion"
    kapt "android.arch.lifecycle:compiler:$lifecycleVersion"
    implementation "com.android.support:support-core-ui:$supportLibraryVersion"
    implementation "com.android.support:support-fragment:$supportLibraryVersion"
    api "android.arch.persistence.room:runtime:$roomVersion"
    kapt "android.arch.persistence.room:compiler:$roomVersion"
    api("com.google.android.gms:play-services-wearable:$playServicesWearableVersion") {
        exclude module: 'support-v4'
    }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion rootProject.ext.targetSdkVersion

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        publicBeta
        publicDebug
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}
